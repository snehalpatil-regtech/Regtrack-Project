<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitReportReporter -->
<testsuite hostname="TRPL-PUN-0115" failures="0" tests="31" name="criticalTestScripts.Performer" time="30.836" errors="1" timestamp="2024-07-12T18:28:32 IST" skipped="30">
  <testcase classname="criticalTestScripts.Performer" name="Login" time="30.835">
    <error message="Cannot locate an element using xpath=//div[@id=&#039;dvbtnCompliance&#039;]/div[1]/img
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: &#039;3.141.0&#039;, revision: &#039;2ecb7d9a&#039;, time: &#039;2018-10-31T20:09:30&#039;
System info: host: &#039;TRPL-PUN-0115&#039;, ip: &#039;192.168.5.60&#039;, os.name: &#039;Windows 10&#039;, os.arch: &#039;amd64&#039;, os.version: &#039;10.0&#039;, java.version: &#039;20&#039;
Driver info: driver.version: RemoteWebDriver" type="org.openqa.selenium.NoSuchElementException">
      <![CDATA[org.openqa.selenium.NoSuchElementException: Cannot locate an element using xpath=//div[@id='dvbtnCompliance']/div[1]/img
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.0', revision: '2ecb7d9a', time: '2018-10-31T20:09:30'
System info: host: 'TRPL-PUN-0115', ip: '192.168.5.60', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '20'
Driver info: driver.version: RemoteWebDriver
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:327)
at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:428)
at org.openqa.selenium.By$ByXPath.findElement(By.java:353)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
at login.LoginPOM.clickComplicane(LoginPOM.java:111)
at login.Login.UserLogin(Login.java:357)
at login.BasePage.initialization(BasePage.java:208)
at criticalTestScripts.Performer.Login(Performer.java:84)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:62)
at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:385)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:321)
at org.testng.internal.TestInvoker.runConfigMethods(TestInvoker.java:700)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:527)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </error>
  </testcase> <!-- Login -->
  <system-out/>
  <testcase classname="criticalTestScripts.Performer" name="Upcoming_ComplianceStatutory" time="0.000">
    <skipped/>
  </testcase> <!-- Upcoming_ComplianceStatutory -->
  <system-out/>
  <testcase classname="criticalTestScripts.Performer" name="Upcoming_ComplianceInternal" time="0.000">
    <skipped/>
  </testcase> <!-- Upcoming_ComplianceInternal -->
  <system-out/>
  <testcase classname="criticalTestScripts.Performer" name="StatutoryOverdueCri" time="0.000">
    <skipped/>
  </testcase> <!-- StatutoryOverdueCri -->
  <system-out/>
  <testcase classname="criticalTestScripts.Performer" name="InternalOverdueCri" time="0.000">
    <skipped/>
  </testcase> <!-- InternalOverdueCri -->
  <system-out/>
  <testcase classname="criticalTestScripts.Performer" name="StatutoryChecklistAction" time="0.000">
    <skipped/>
  </testcase> <!-- StatutoryChecklistAction -->
  <system-out/>
  <testcase classname="criticalTestScripts.Performer" name="InternalCheckListAction" time="0.000">
    <skipped/>
  </testcase> <!-- InternalCheckListAction -->
  <system-out/>
  <testcase classname="criticalTestScripts.Performer" name="DashboardRejectStatutory" time="0.000">
    <skipped/>
  </testcase> <!-- DashboardRejectStatutory -->
  <system-out/>
  <testcase classname="criticalTestScripts.Performer" name="DashboardRejectInternal" time="0.001">
    <skipped/>
  </testcase> <!-- DashboardRejectInternal -->
  <system-out/>
  <testcase classname="criticalTestScripts.Performer" name="ActivatedEventsPer" time="0.000">
    <skipped/>
  </testcase> <!-- ActivatedEventsPer -->
  <system-out/>
  <testcase classname="criticalTestScripts.Performer" name="ClosedEventsPer" time="0.000">
    <skipped/>
  </testcase> <!-- ClosedEventsPer -->
  <system-out/>
  <testcase classname="criticalTestScripts.Performer" name="AssignedEvents" time="0.000">
    <skipped/>
  </testcase> <!-- AssignedEvents -->
  <system-out/>
  <testcase classname="criticalTestScripts.Performer" name="PerformerTaskUpcoming" time="0.000">
    <skipped/>
  </testcase> <!-- PerformerTaskUpcoming -->
  <system-out/>
  <testcase classname="criticalTestScripts.Performer" name="PerformerTaskUpcomingIn" time="0.000">
    <skipped/>
  </testcase> <!-- PerformerTaskUpcomingIn -->
  <system-out/>
  <testcase classname="criticalTestScripts.Performer" name="PerformerTaskOverdue" time="0.000">
    <skipped/>
  </testcase> <!-- PerformerTaskOverdue -->
  <system-out/>
  <testcase classname="criticalTestScripts.Performer" name="PerformerTaskOverdueIn" time="0.000">
    <skipped/>
  </testcase> <!-- PerformerTaskOverdueIn -->
  <system-out/>
  <testcase classname="criticalTestScripts.Performer" name="PerformerTaskRejected" time="0.000">
    <skipped/>
  </testcase> <!-- PerformerTaskRejected -->
  <system-out/>
  <testcase classname="criticalTestScripts.Performer" name="PerformerTaskRejectedIn" time="0.000">
    <skipped/>
  </testcase> <!-- PerformerTaskRejectedIn -->
  <system-out/>
  <testcase classname="criticalTestScripts.Performer" name="PerformerTaskPFR" time="0.000">
    <skipped/>
  </testcase> <!-- PerformerTaskPFR -->
  <system-out/>
  <testcase classname="criticalTestScripts.Performer" name="PerformerTaskPFRIn" time="0.000">
    <skipped/>
  </testcase> <!-- PerformerTaskPFRIn -->
  <system-out/>
  <testcase classname="criticalTestScripts.Performer" name="DueButNotSubmitted" time="0.000">
    <skipped/>
  </testcase> <!-- DueButNotSubmitted -->
  <system-out/>
  <testcase classname="criticalTestScripts.Performer" name="DueButNotSubmittedIn" time="0.000">
    <skipped/>
  </testcase> <!-- DueButNotSubmittedIn -->
  <system-out/>
  <testcase classname="criticalTestScripts.Performer" name="PendingForReview" time="0.000">
    <skipped/>
  </testcase> <!-- PendingForReview -->
  <system-out/>
  <testcase classname="criticalTestScripts.Performer" name="PendingForReviewIn" time="0.000">
    <skipped/>
  </testcase> <!-- PendingForReviewIn -->
  <system-out/>
  <testcase classname="criticalTestScripts.Performer" name="Rejectedtask" time="0.000">
    <skipped/>
  </testcase> <!-- Rejectedtask -->
  <system-out/>
  <testcase classname="criticalTestScripts.Performer" name="RejectedtaskIn" time="0.000">
    <skipped/>
  </testcase> <!-- RejectedtaskIn -->
  <system-out/>
  <testcase classname="criticalTestScripts.Performer" name="Compliancecalendar" time="0.000">
    <skipped/>
  </testcase> <!-- Compliancecalendar -->
  <system-out/>
  <testcase classname="criticalTestScripts.Performer" name="DetailedReport1" time="0.000">
    <skipped/>
  </testcase> <!-- DetailedReport1 -->
  <system-out/>
  <testcase classname="criticalTestScripts.Performer" name="DetailedReportIn" time="0.000">
    <skipped/>
  </testcase> <!-- DetailedReportIn -->
  <system-out/>
  <testcase classname="criticalTestScripts.Performer" name="AssignmentReport" time="0.000">
    <skipped/>
  </testcase> <!-- AssignmentReport -->
  <system-out/>
  <testcase classname="criticalTestScripts.Performer" name="ComplianceDocumentsSat" time="0.000">
    <skipped/>
  </testcase> <!-- ComplianceDocumentsSat -->
  <system-out/>
</testsuite> <!-- criticalTestScripts.Performer -->
