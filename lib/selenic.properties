#default properties

# === END USER LICENSE AGREEMENT ===
# Set to true to accept the end user license agreement
# Please review the EULA.txt file included in the installation directory for Parasoft Selenic
#parasoft.eula.accepted=false
parasoft.eula.accepted=true
parasoft.agent.report.location=C:\Users\shitalb\.jenkins\workspace\Regtrack-compliance\Reports

# === LICENSE ===

# === LOCAL LICENSE ===
# Enables local license - be sure to specify password.
selenic.license.use_network=false

# Specifies password for the local license. 
selenic.license.local.password=s1_Ed84oihxQgd9X

# === NETWORK LICENSE ===
# Enables network license - be sure to configure DTP server settings.
#selenic.license.use_network=true

# Specifies type of the network license.
#selenic.license.network.edition=automation_edition
#selenic.license.network.edition=desktop_edition
#selenic.license.network.edition=custom_edition

# List of requested license features.
#selenic.license.custom_edition_features=Selenic,API Test Creation with SOAtest,Automation,Generate Recommendations,Performance Benchmarking,Publish to DTP,Quick Fix,Selenium Test Creation,Self-Healing,Test Impact Analysis

# === DTP SERVER SETTINGS ===

# Specifies DTP server URL, e.g., https://host[:port][/context-path]
#dtp.url=https\://[DTP Server Host]\:8443

# Specifies user name for DTP server authentication.
#dtp.user=[USERNAME]

# Specifies password for DTP server authentication - use java -jar selenic_analyzer.jar -encodepass <PASSWORD> to encode the password, if needed.
#dtp.password=[PASSWORD]

# Specifies name of the DTP project (optional).
#dtp.project=[DTP Project Name]

# === LICENSE SERVER STANDALONE SETTINGS ===

# Enables license server standalone connection settings.
#license.network.use.specified.server=true

# Specifies license server URL, e.g., https://host[:port][/context-path]
#license.network.url=https\://[License Server Host]\:8443

# Enables authentication with the license server.
#license.network.auth.enabled=true

# Specifies user name for license server authentication.
#license.network.user=[USERNAME]

# Specifies password for license server authentication - use java -jar selenic_analyzer.jar -encodepass <PASSWORD> to encode the password, if needed.
#license.network.password=[PASSWORD]

# === REPORTING ===

# Enables reporting test results to DTP server - be sure to configure DTP server settings.
report.dtp.publish=true

# Specifies whether the tested source code is published to the DTP server. Options are "full", "min", and "off"
#report.dtp.publish.src=full

# Specifies a build identifier used to label results. It may be unique for each build
# but may also label more than one test sessions that were executed during a specified build.
#build.id=${dtp_project}-yyyy-MM-dd

# Specifies a tag which represents an unique identifier for the run, used to distinguish it from similar runs.
# It could be constructed as minimal combination of following variables that will make it unique or specified manually.
# e.g. ${dtp_project}-${exec_env}
#session.tag=[tag]

# === Source Control ===
# Enables source control integration on DTP server:
#    filtering by branches, viewing revisions, browsing code on the DTP server.
# Enables paths for locations, revision, branches and comments for quality tasks.
#    off: no information is reported
#    min: repositories, file paths and revisions are reported
#    full: also task revisions and comments are reported
#report.scontrol=min

# Use java -jar selenic_analyzer.jar -encodepass <PASSWORD> to encode the passwords of source control users.

# === SUBVERSION ===
#scontrol.rep1.type=svn
#scontrol.rep1.svn.url=https\://foo.bar.com/svn
#scontrol.rep1.svn.login=[user name]
#scontrol.rep1.svn.password=[password]
#scontrol.svn.exec=C\:\\Program Files\\svn\\bin\\svn.exe

# === GIT ===
#scontrol.rep1.type=git
#scontrol.rep1.git.url=http\://foo.bar.com\:7990/git
#scontrol.rep1.git.branch=master
#scontrol.rep1.git.workspace=C\:\\workspace
#scontrol.git.exec=C\:\\Program Files (x86)\\Git\\bin\\git.exe

# === TEAM FOUNDATION SERVER ===
#scontrol.rep1.type=tfs
#scontrol.rep1.tfs.url=http\://foo.bar.com\:8080/tfs
#scontrol.rep1.tfs.login=[user name]
#scontrol.rep1.tfs.password=[password]

# === OIDC ===
# Enables or disables user authentication via OpenID Connect
#oidc.enabled=false
# Specifies the URI of the OpenID Connect server
#oidc.issuer.uri=
# Specifies the ID provided by your OpenID Connect server
#oidc.client.id=
# Specifies the method that will be used to authenticate the user on the OpenID Connect server
#oidc.cli.mode=devicecode
# Specifies the path to the token file containing user authentication information
#oidc.devicecode.token.file=

# === TELEMETRY ===
# Enables logging telemetry data
#usage.reporting.enabled=true
